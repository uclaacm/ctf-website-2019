{"version":3,"sources":["components/Banner/index.js","components/Navbar/index.js","components/About/index.js","components/Register/index.js","components/Schedule/index.js","components/Faq/index.js","components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Banner","react_default","a","createElement","className","id","src","Component","Navbar","href","About","Register","Schedule","Faq","target","Contact","App","components_Banner","components_Navbar","components_About","components_Register","components_Schedule","components_Faq","components_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qYAqBeA,gMAhBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SACNJ,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,mBAGFF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,OAAKG,IAAI,kCACTL,EAAAC,EAAAC,cAAA,gDAXWI,cCgBNC,0LAdX,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,UAASR,EAAAC,EAAAC,cAAA,oBACjBF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,aAAYR,EAAAC,EAAAC,cAAA,uBACpBF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,aAAYR,EAAAC,EAAAC,cAAA,uBACpBF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,QAAOR,EAAAC,EAAAC,cAAA,kBACfF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,YAAWR,EAAAC,EAAAC,cAAA,+BATRI,cCiBNG,0LAfX,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,GAAG,SAChCJ,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKG,IAAI,sBAEXL,EAAAC,EAAAC,cAAA,obAVUI,cCmBLI,0LAjBX,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,GAAG,YACnCJ,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKG,IAAI,mCAXEC,cCiCRK,0LA/BX,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBC,GAAG,YACnCJ,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,iDAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,wCAzBWI,cC0BRM,0LAxBX,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,GAAG,OAC9BJ,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,2DAEAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,qGAEAF,EAAAC,EAAAC,cAAA,2GACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,iCAAiCK,OAAO,UAAhD,iBAAJ,0CACAb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,6CAA6CK,OAAO,UAA5D,YAAJ,iHACAb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,uBAAuBK,OAAO,UAAtC,WAAJ,kBACAb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,6CAA6CK,OAAO,UAA5D,wBAAJ,gCAlBMP,cCeHQ,0LAbX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,WAClCJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,6BAA6BK,OAAO,UAA5C,SACAb,EAAAC,EAAAC,cAAA,KAAGM,KAAK,mDAAmDK,OAAO,UAAlE,YACAb,EAAAC,EAAAC,cAAA,KAAGM,KAAK,6GAA6GK,OAAO,UAA5H,WACAb,EAAAC,EAAAC,cAAA,KAAGM,KAAK,4FAA4FK,OAAO,UAA3G,cACAb,EAAAC,EAAAC,cAAA,wCATcI,cCwBPS,mLAdX,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MACAjB,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,cAVUhB,aCCEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2aa16f34.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nclass Banner extends Component {\n  render() {\n    return (\n      <div className=\"Banner\">\n        <div id=\"title\">\n          <h1>CALIFORNIA CTF</h1>\n          <h2>2018</h2>\n        </div>\n\n        <div id=\"watermark\">\n          <img src=\"/images/logo-netsec-black.svg\" />\n          <p>hosted by acm cyber @ ucla</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Banner;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"Navbar\">\n        <ul>\n          <a href=\"#about\"><li>about</li></a>\n          <a href=\"#register\"><li>register</li></a>\n          <a href=\"#schedule\"><li>schedule</li></a>\n          <a href=\"#faq\"><li>faq</li></a>\n          <a href=\"#contact\"><li>contact</li></a>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"About section\" id=\"about\">\n        <h2>ABOUT</h2>\n\n        <div className=\"split\">\n          <div className=\"wrapper\">\n            <img src=\"/images/flag.png\" />\n          </div>\n          <p>Capture the Flag is a security hackathon - which means youâ€™ll actually be hacking! Participants compete against other student teams. The event is open to students of all skill levels and we are especially beginner friendly. The goal is to capture a flag hidden in the solution of a challenging question. The more difficult a question, the more points your team is awarded for \"capturing\" that particular flag.</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Register extends Component {\n  render() {\n    return (\n      <div className=\"Register section\" id=\"register\">\n        <h2>REGISTER</h2>\n\n        <div className=\"split\">\n          <div className=\"text-wrapper\">\n            <button>COMING SOON...</button>\n          </div>\n          <div className=\"wrapper\">\n            <img src=\"/images/terminal.png\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Schedule extends Component {\n  render() {\n    return (\n      <div className=\"Schedule section\" id=\"schedule\">\n        <h2>SCHEDULE:</h2>\n\n        <table>\n          <tr>\n            <th>11:30 AM - 12:30 PM</th>\n            <td>CHECK IN</td>\n          </tr>\n          <tr>\n            <th>12:30 PM - 1:30 PM</th>\n            <td>Opening Ceremony + Keynote Speaker</td>\n          </tr>\n          <tr>\n            <th>1:30 PM - 7:30 PM</th>\n            <td>Start Hacking!!!</td>\n          </tr>\n          <tr>\n            <th>5:00 PM - 6:00 PM</th>\n            <td>Dinner</td>\n          </tr>\n          <tr>\n            <th>8:00 PM - 9:00 PM</th>\n            <td>Closing Ceremony</td>\n          </tr>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Schedule;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Faq extends Component {\n  render() {\n    return (\n      <div className=\"Faq section\" id=\"faq\">\n        <h2>FAQ</h2>\n\n        <div id=\"questions\">\n          <h3>How many people can be on a team?</h3>\n          <p>The character End of Transmission (EoT) - 0x04</p>\n\n          <h3>What topics does California CTF cover?</h3>\n          <p>Cryptography, Web Hacking, Steganography, Forensics and Reverse Engineering among others</p>\n\n          <h3>The only experience with hacking I have is watching Mission Impossible. Where should I start?</h3>\n          <ul>\n            <li><a href=\"https://www.hacksplaining.com/\" target=\"_blank\">Hacksplaining</a> - General hacking lessons &amp; exercises</li>\n            <li><a href=\"https://github.com/danielmiessler/SecLists\" target=\"_blank\">SecLists</a> - The security tester's companion - a collection of multiple types of lists used during security assessments</li>\n            <li><a href=\"https://sqlbolt.com/\" target=\"_blank\">SQLBolt</a> - SQL Brushup</li>\n            <li><a href=\"https://learnxinyminutes.com/docs/python3/\" target=\"_blank\">Learn X in Y Minutes</a> - Learning Python</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div className=\"Contact section\" id=\"contact\">\n        <h2>CONTACT US:</h2>\n        <a href=\"mailto:uclacyber@gmail.com\" target=\"_blank\">Email</a>\n        <a href=\"https://www.facebook.com/groups/320869398280511/\" target=\"_blank\">Facebook</a>\n        <a href=\"https://discordapp.com/invite/5fqUvFZ?fbclid=IwAR06BfN5fteTA1Z3fweiLkYYx9x4Opz8ULtjEiuJNbfSOqOcKaqIEPDpvm4\" target=\"_blank\">Discord</a>\n        <a href=\"https://facebook.us19.list-manage.com/subscribe?u=73e7775028a70c4c696d80cf0&id=2bd7f0b054\" target=\"_blank\">Newsletter</a>\n        <p>Copyright &copy; 2019</p>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Banner from './components/Banner';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Register from './components/Register';\nimport Schedule from './components/Schedule';\nimport Faq from './components/Faq';\nimport Contact from './components/Contact';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n        <Navbar />\n        <About />\n        <Register />\n        <Schedule />\n        <Faq />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}